<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

    <display-name>MMBABY-SITE</display-name>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>app-web.root</param-value>
    </context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:config/spring/*.xml
        </param-value>
    </context-param>


    <!-- 激活Tomcat的defaultServlet来处理静态文件 -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>

    </servlet-mapping>


    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:config/log/log4j.xml</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <!--<filter>-->
    <!--<filter-name>cat-filter</filter-name>-->
    <!--<filter-class>com.dianping.cat.servlet.CatFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>cat-filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--<dispatcher>REQUEST</dispatcher>-->
    <!--<dispatcher>FORWARD</dispatcher>-->
    <!--</filter-mapping>-->

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:config/springWeb/*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>-1</session-timeout>
    </session-config>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>


    <!-- Servlet Filters ================================================ -->

    <!--&lt;!&ndash;-->
    <!-- - Declare a filter for multipart MIME handling-->
    <!--&ndash;&gt;-->
    <!--<filter>-->
    <!--<description>Multipart MIME handling filter for Cocoon</description>-->
    <!--<display-name>Cocoon multipart filter</display-name>-->
    <!--<filter-name>CocoonMultipartFilter</filter-name>-->
    <!--<filter-class>org.apache.cocoon.servlet.multipart.MultipartFilter</filter-class>-->
    <!--</filter>-->

    <!--&lt;!&ndash;-->
    <!-- - Declare a filter for debugging incoming request-->
    <!--&ndash;&gt;-->
    <!--<filter>-->
    <!--<description>Log debug information about each request</description>-->
    <!--<display-name>Cocoon debug filter</display-name>-->
    <!--<filter-name>CocoonDebugFilter</filter-name>-->
    <!--<filter-class>org.apache.cocoon.servlet.DebugFilter</filter-class>-->
    <!--</filter>-->

    <!--&lt;!&ndash; Filter mappings ================================================ &ndash;&gt;-->

    <!--&lt;!&ndash;-->
    <!-- - Use the Cocoon multipart filter together with the Cocoon demo webapp-->
    <!--&ndash;&gt;-->
    <!--<filter-mapping>-->
    <!--<filter-name>CocoonMultipartFilter</filter-name>-->
    <!--<servlet-name>Cocoon</servlet-name>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CocoonMultipartFilter</filter-name>-->
    <!--<servlet-name>DispatcherServlet</servlet-name>-->
    <!--</filter-mapping>-->

    <!--&lt;!&ndash;-->
    <!-- - Use the Cocoon debug filter together with the Cocoon demo webapp-->
    <!--<filter-mapping>-->
    <!--<filter-name>CocoonDebugFilter</filter-name>-->
    <!--<servlet-name>Cocoon</servlet-name>-->
    <!--</filter-mapping>-->
    <!--&ndash;&gt;-->

    <!--&lt;!&ndash; Servlet Context Listener ======================================= &ndash;&gt;-->

    <!--&lt;!&ndash;-->
    <!-- - Declare Spring context listener which sets up the Spring Application Context-->
    <!-- - containing all Cocoon components (and user defined beans as well).-->
    <!--&ndash;&gt;-->
    <!--<listener>-->
    <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--</listener>-->

    <!--&lt;!&ndash;-->
    <!-- - Declare Spring request listener which sets up the required RequestAttributes-->
    <!-- - to support Springs and Cocoon custom bean scopes like the request scope or the-->
    <!-- - session scope.-->
    <!--&ndash;&gt;-->
    <!--<listener>-->
    <!--<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>-->
    <!--</listener>-->

    <!--&lt;!&ndash; Servlet Configuration ========================================== &ndash;&gt;-->

    <!--&lt;!&ndash;-->
    <!-- - Servlet that dispatches requests to the Spring managed block servlets-->
    <!--&ndash;&gt;-->
    <!--<servlet>-->
    <!--<description>Cocoon blocks dispatcher</description>-->
    <!--<display-name>DispatcherServlet</display-name>-->
    <!--<servlet-name>DispatcherServlet</servlet-name>-->
    <!--<servlet-class>org.apache.cocoon.servletservice.DispatcherServlet</servlet-class>-->
    <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->

    <!--&lt;!&ndash; URL space mappings ============================================= &ndash;&gt;-->

    <!--&lt;!&ndash;-->
    <!-- - Cocoon handles all the URL space assigned to the webapp using its sitemap.-->
    <!-- - It is recommended to leave it unchanged. Under some circumstances though-->
    <!-- - (like integration with proprietary webapps or servlets) you might have-->
    <!-- - to change this parameter.-->
    <!--&ndash;&gt;-->
    <!--<servlet-mapping>-->
    <!--<servlet-name>DispatcherServlet</servlet-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</servlet-mapping>-->

</web-app>
